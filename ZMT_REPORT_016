*&---------------------------------------------------------------------*
*& Report ZMT_REPORT_021
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zmt_report_021.

TABLES: sscrfields.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001 NO INTERVALS.
  SELECTION-SCREEN BEGIN OF LINE.

    SELECTION-SCREEN COMMENT 1(5) text-002.
    SELECTION-SCREEN POSITION 6.
    PARAMETERS: p_hour TYPE int2 as LISTBOX VISIBLE LENGTH 6.

    SELECTION-SCREEN COMMENT 15(7) text-003.
    SELECTION-SCREEN POSITION 22.
    PARAMETERS: p_min TYPE int2 as LISTBOX VISIBLE LENGTH 6.

    SELECTION-SCREEN COMMENT 31(7) text-004.
    SELECTION-SCREEN POSITION 38.
    PARAMETERS: p_sec TYPE int2 as LISTBOX VISIBLE LENGTH 6.

    SELECTION-SCREEN PUSHBUTTON 46(54) bt1 USER-COMMAND hsp.

  SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b1.

SELECTION-SCREEN BEGIN OF BLOCK b2.
  PARAMETERS: p_rslt TYPE i.
SELECTION-SCREEN END OF BLOCK b2.

INITIALIZATION.

" It uses for creating button
  CALL FUNCTION 'ICON_CREATE'
    EXPORTING
      name                  = icon_calculation
      text                  = TEXT-005
      info                  = TEXT-006
      add_stdinf            = 'X'
    IMPORTING
      result                = bt1
    EXCEPTIONS
      icon_not_found        = 1
      outputfield_too_short = 2
      OTHERS                = 3.
  IF sy-subrc <> 0.
    MESSAGE 'Occured an error while creating button' TYPE 'S' DISPLAY LIKE 'E'.
  ENDIF.

  PERFORM dropdown.

 AT SELECTION-SCREEN OUTPUT.

   LOOP AT SCREEN.
     IF p_rslt IS INITIAL.
       IF screen-name eq 'P_RSLT' OR screen-name = '%_P_RSLT_%_APP_%-TEXT'.
         screen-active = '0'.
         MODIFY SCREEN.
       ENDIF.
      ELSE.
        IF screen-name eq 'P_RSLT'.
          screen-input = '0'.
          MODIFY SCREEN.
        ENDIF.
     ENDIF.
   ENDLOOP.

   AT SELECTION-SCREEN.

     CLEAR: p_rslt.

     CASE sscrfields-ucomm.
     	WHEN 'HSP'.
        IF p_hour > 0.
          p_rslt = p_hour * 3600.
        ENDIF.

        IF p_min > 0.
          p_rslt = p_rslt + ( p_min * 60 ).
        ENDIF.

        IF p_sec > 0.
          p_rslt = p_rslt + p_sec.
        ENDIF.
     ENDCASE.
*&---------------------------------------------------------------------*
*&      Form  DROPDOWN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM dropdown .

  DATA: lv_fname TYPE vrm_id,
        lt_values TYPE vrm_values,
        ls_value TYPE vrm_value,
        lv_number TYPE i.

  " Hours
  lv_fname = 'P_HOUR'.
  CLEAR: lv_number, lt_values.

  DO 24 TIMES.
    lv_number     = lv_number + 1.
    ls_value-key  = lv_number.
    ls_value-text = lv_number.

    append ls_value TO lt_values.
    CLEAR: ls_value.
  ENDDO.

" It used to create dropdown list
  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      id                    = lv_fname
      values                = lt_values
   EXCEPTIONS
     ID_ILLEGAL_NAME       = 1
     OTHERS                = 2
            .
  IF sy-subrc <> 0.
    MESSAGE 'Something went wrong :) ' TYPE 'S' DISPLAY LIKE 'E'.
    LEAVE PROGRAM.
  ENDIF.


  " Minutes
lv_fname = 'P_MIN'.
  CLEAR: lv_number, lt_values.

  DO 60 TIMES.
    lv_number     = lv_number + 1.
    ls_value-key  = lv_number.
    ls_value-text = lv_number.

    append ls_value TO lt_values.
    CLEAR: ls_value.
  ENDDO.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      id                    = lv_fname
      values                = lt_values
   EXCEPTIONS
     ID_ILLEGAL_NAME       = 1
     OTHERS                = 2
            .
  IF sy-subrc <> 0.
    MESSAGE 'Something went wrong :) ' TYPE 'S' DISPLAY LIKE 'E'.
    LEAVE PROGRAM.
  ENDIF.


   " Seconds
lv_fname = 'P_SEC'.
  CLEAR: lv_number, lt_values.

  DO 60 TIMES.
    lv_number     = lv_number + 1.
    ls_value-key  = lv_number.
    ls_value-text = lv_number.

    append ls_value TO lt_values.
    CLEAR: ls_value.
  ENDDO.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      id                    = lv_fname
      values                = lt_values
   EXCEPTIONS
     ID_ILLEGAL_NAME       = 1
     OTHERS                = 2
            .
  IF sy-subrc <> 0.
    MESSAGE 'Something went wrong :) ' TYPE 'S' DISPLAY LIKE 'E'.
    LEAVE PROGRAM.
  ENDIF.

ENDFORM.
